{"version":3,"sources":["ts/fitness.ts"],"names":[],"mappings":"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","file":"fitness.a44099ed.js","sourceRoot":"..","sourcesContent":["\n//declare const _: typeof import('lodash')\nimport * as _ from 'lodash';\nimport { getCodeObjFromCode, UserCodeObject, createFrameRequester, objectFactory } from './base'\nimport { WorldController, WorldCreator } from './world'\nimport { Challenge, WinCondition, ChallengeOptions } from './challenges'\n\nfunction requireNothing(): WinCondition {\n\treturn {\n\t\tdescription: \"No requirement\",\n\t\tevaluate: function() { return null; }\n\t};\n};\n\nconst fitnessChallenges: Challenge[] = [\n\t {options: {description: \"Small scenario\", floorCount: 4, elevatorCount: 2, spawnRate: 0.6}, condition: requireNothing()}\n\t,{options: {description: \"Medium scenario\", floorCount: 6, elevatorCount: 3, spawnRate: 1.5, elevatorCapacities: [5]}, condition: requireNothing()}\n\t,{options: {description: \"Large scenario\", floorCount: 18, elevatorCount: 6, spawnRate: 1.9, elevatorCapacities: [8]}, condition: requireNothing()}\n]\n\n\n\n// Simulation without visualisation\nfunction calculateFitness(challenge: Challenge, codeObj: UserCodeObject, stepSize: number, stepsToSimulate: number): FitnessResult {\n\tconst controller = new WorldController(stepSize);\n\tlet result: FitnessResult | Error | null = null!;\n\t\n\tconst worldCreator = new WorldCreator();\n\tconst world = worldCreator.createWorld(challenge.options);\n\tconst frameRequester = createFrameRequester(stepSize);\n\n\tcontroller.on(\"usercode_error\", (e: Error) => {\n\t\tresult = e;\n\t});\n\tworld.on(\"stats_changed\", () => {\n\t\tresult = {\n\t\t\ttransportedPerSec: world.transportedPerSec,\n\t\t\tavgWaitTime: world.avgWaitTime,\n\t\t\ttransportedCount: world.transportedCounter,\n\t\t}\n\t});\n\n\tcontroller.start(world, codeObj, frameRequester.register, true);\n\n\tfor(let stepCount=0; stepCount < stepsToSimulate && !controller.isPaused; stepCount++) {\n\t\tframeRequester.trigger();\n\t}\n\n\t// Ignore type checkers insistance that the two callbacks aren't called during the execution flow\n\tresult = result!;\n\n\tif(result === null) {\n\t\tthrow new Error('Recieved null result from fitness test...');\n\t} else if(result instanceof Error) {\n\t\tthrow result;\n\t} else {\n\t\treturn result;\n\t}\n};\n\nconst pluck = <C extends T[], T>(obj: C, key: keyof T): T[typeof key][] => obj.map<T[typeof key]>(v => v[key]);\n\n// If editing, remember to edit makeAverageResult.fitnessKeys\ninterface FitnessResult {\n\ttransportedPerSec: number;\n\tavgWaitTime: number;\n\ttransportedCount: number;\n}\n\nfunction makeAverageResult(results: TestRun[]): TestRun {\n\tlet fitnessKeys: (keyof FitnessResult)[] = [\"transportedPerSec\", \"avgWaitTime\", \"transportedCount\"];\n\n\tlet averagedResult: FitnessResult = objectFactory(fitnessKeys, (k: keyof FitnessResult) => {\n\t\tvar sum = results\n\t\t\t.map(v => v.result[k])\n\t\t\t.reduce((acc, v) => acc + v);\n\t\treturnÂ sum / results.length;\n\t})\n\n\treturn {\n\t\toptions: results[0].options, // TODO: Assert all the same (pass it as `options` param instead of bundling it w/ seperate TestRun interface? )\n\t\tresult: averagedResult,\n\t};\n};\n\nexport interface TestRun {\n\toptions: ChallengeOptions;\n\tresult: FitnessResult;\n}\n\nfunction times<T>(count: number, iteratee: (i: number) => T): T[] {\n\tconst elements: T[] = [];\n\tfor(let i = 0; i < count; i++) {\n\t\telements.push(iteratee(i));\n\t}\n\treturn elements;\n}\n\nexport async function doFitnessSuite(codeStr: string, runCount: number): Promise<TestRun[]> {\n\t// Can throw, allow to bubble up\n\tlet codeObj = await getCodeObjFromCode(codeStr);\n\tconsole.log(\"Fitness testing code\", codeObj);\n\n\t// testruns[runCount][fitnessChallenges.length]\n\n\t// Can throw, allow to bubble up\n\tconst testruns = times(runCount, () => // Run runCount times\n\t\tfitnessChallenges.map<TestRun>(challenge => ({ // Calculate fitness for each challenge\n\t\t\t\toptions: challenge.options,\n\t\t\t\tresult: calculateFitness(challenge, codeObj, 1000.0/60.0, 12000)\n\t\t\t})\n\t\t)\n\t)\n\n\t// Now do averaging over all properties for each challenge's test runs\n\tconst averagedResults: TestRun[] = times(testruns[0].length, (n) => \n\t\tmakeAverageResult(testruns.map(challenges => challenges[n]))\n\t)\n\n\treturn averagedResults;\n}\n\n// Returned promise may explictly reject if a test run throws or user code is invalid\nexport async function fitnessSuite(codeStr: string, preferWorker: boolean): Promise<TestRun[]> {\n\tif(!!Worker && preferWorker) {\n\t\t// Web workers are available, neat.\n\t\ttry {\n\t\t\t// Chrome doesn't support { type: \"module\" } without a flag yet - so this will probably error for a while\n\t\t\tlet w = new Worker(\"scripts/fitnessworker.js\", { type: \"module\" });\n\t\t\t//let w = new Worker(\"scripts/fitnessworker.js\", { type: \"classic\" });\n\t\t\tw.postMessage(codeStr);\n\t\t\treturn new Promise<TestRun[]>((res, rej) => {\n\t\t\t\tw.onerror = e => {\n\t\t\t\t\tlet wwErr = new Error('WebWorker failure');\n\t\t\t\t\t(wwErr as any).base = e;\n\t\t\t\t\t(window as any).lastErrorLol = wwErr;\n\t\t\t\t\trej(wwErr);\n\t\t\t\t}\n\t\t\t\tw.onmessage = msg => {\n\t\t\t\t\tconsole.log(\"Got message from fitness worker\", msg);\n\t\t\t\t\tif(Array.isArray(msg.data) && typeof msg.data[0] === \"string\") {\n\t\t\t\t\t\tlet nerr = new Error();\n\t\t\t\t\t\tlet [emsg, ename, estack] = msg.data;\n\t\t\t\t\t\tnerr.message = emsg;\n\t\t\t\t\t\tnerr.name = ename;\n\t\t\t\t\t\tnerr.stack = estack;\n\t\t\t\t\t\trej(nerr); // Passthrough error\n\t\t\t\t\t} else if(Array.isArray(msg.data)) {\n\t\t\t\t\t\tres(msg.data); // Resolve with results\n\t\t\t\t\t} else {\n\t\t\t\t\t\trej(new Error('Bad result from web worker!'));\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t});\n\t\t} catch(e) {\n\t\t\tconsole.warn(\"Fitness worker creation failed, falling back to normal (error on next log entry):\");\n\t\t\tconsole.warn(e);\n\t\t}\n\t}\n\n\t// Fall back do sync calculation without web worker\n\treturn doFitnessSuite(codeStr, 2);\n};\n"]}